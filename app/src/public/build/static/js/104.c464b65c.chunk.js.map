{"version":3,"file":"static/js/104.c464b65c.chunk.js","mappings":"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","sources":["components/banner.js","components/article.js","routes/Home.js"],"sourcesContent":["// 기존에 쓰던 querySelector은 dom을 참조 react는 가상돔이라 사용을 자제해야 한다. \n// 대신 사용하는 것이 useRef란 것 사용시 {변수명.current}\nimport { useEffect, useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../style/banner.css\"\n\nfunction Banner() {\n  const [index, setIndex] = useState(0);\n  const [dotIndex, setDotIndex] = useState(1);\n  const [toggle, setToggle] =useState(true);\n  // document.querySelector과 같은 기능 {변수명.current로 사용해야함}\n  const carousel = useRef(null);\n  const item = useRef(null);\n  const [active, setActive] = useState(\"\");\n  const TIME = 300;\n\n  // 불러온 데이터 바로 저장 변수\n  const [lights, setLights] = useState([\n    {\n      IMG_DATA: \"\",\n      PRODUCT_PK: \"\",\n      PRODUCT_NM: \"\",\n    },\n    {\n      IMG_DATA: \"\",\n      PRODUCT_PK: \"\",\n      PRODUCT_NM: \"\",\n    },\n    {\n      IMG_DATA: \"\",\n      PRODUCT_PK: \"\",\n      PRODUCT_NM: \"\",\n    },\n  ]);\n  // 이미지만 따로 모은 변수\n  const [img, setImg] =useState(\"\");\n\n  // api 연결 부분\n  useEffect(() => {\n    async function getRandomData() {\n      try{\n        const response = await fetch('api/main', {\n          credentials: 'include',\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(), \n        });\n    \n        // 연결 성공 유무 판단\n        if (response.ok) {\n          const res = await response.json();\n          if (res.success) {\n            setLights(res.data);\n          } else {\n            alert(res.msg);\n          }\n        } else {\n          throw Error(\"서버 응답 실패\");\n        }\n      } catch(err) {\n        console.error(Error('불러오는 중 에러 발생'));\n      }\n    };\n\n    getRandomData();\n  }, []);\n\n  //이미지 디코딩 함수\n  useEffect(() => {\n    // async 비동기 함수로 선언하는데 사용 내부에서 await을 사용하여 비동기 작업 수행 (항상 promise를 반환한다.)\n    const decodeImages = async () => {\n      if (lights[0].IMG_DATA !== \"\") {\n        // await async 함수 안에서만 동작하며, promise가 처리 될때까지 기다린다. \n        // 사용자경험을 향상시키기 위해 사용(응답성 향상, 성능개선)\n        // promise는 비동기 작업을 다룰 때 사용되는 객체로 resolve(성공), reject(거절) 두가지 콜백을 받고 all을 사용하여 여러 배열을 병렬로 처리시 사용\n        const changeData = await Promise.all(lights.map((getImg) => {\n          const base64Data = `data:image/jpeg;base64,${getImg.IMG_DATA}`;\n          getImg = base64Data;\n          return getImg;\n        }));\n        setImg(changeData);\n      }\n    };\n    \n    decodeImages();\n  }, [lights]);\n\n  // slide 눈속임을 이용한 함수 젤끝까지 이동하면 몇초뒤 transition을 없애고 처음으로 이동\n  const onSlide = (e) => {\n    // 누른 방향에 따라서 index값 변화\n    const direction = e.target.className;\n    setIndex(direction === \"banner-pre\" ? (index) => index + 1 : (index) => index - 1);\n    \n    // 왼쪽으로 가다 끝을 만나면 맨 오른쪽으로 이동\n    if (index === 1) {\n      if (direction === \"banner-pre\")\n        setTimeout(() => {\n          setIndex(-1);\n          setActive(\"move\");\n        }, TIME);   \n    } else if (index !== 1)\n        setActive(\"\");\n    // 오른쪽으로 가다 끝을 만나면 맨 왼쪽으로 이동\n    if (index === -1) {\n      if (direction === \"banner-next\")\n        setTimeout(() => {\n          setIndex(1);\n          setActive(\"move\");\n        }, TIME);   \n    } else if (index !== -1)\n        setActive(\"\");\n  };\n\n  // dot을 누르면 그 id값을 가져와 index에 넣어준다.\n  const onDotCLick = (e) => {\n    let value = 0;\n\n    // id의 값이 숫자가 아니라서 == 두개만 사용\n    if (e.target.id === \"0\")\n      value = 1;\n    else if (e.target.id === \"1\")\n      value = 0;\n    else if (e.target.id === \"2\")\n      value = -1;\n    \n    setIndex(value);\n    // 화살표클릭과 겹칠 시 오류를 해결하기 위해 class초기화 하기\n    setActive(\"\"); \n  };\n\n  // index에 맞게 dot의 값을 바꾸어 전달하여 클래스를 생성할 수 있게하는 함수\n  const dotColor = (index) => {\n    let value = 0;\n\n    if (index === 0)\n      value = 1;\n    else if (index === 1)\n      value = 0;\n    else if (index === -1 || index === 2)\n      value = 2; \n    setDotIndex(value);\n  };\n\n  // index값 변경마다 slide 움직이게 하는 화살표함수\n  useEffect(() => {\n    if(img !== \"\") {\n      const itemWidth = item.current.clientWidth + 10;\n      dotColor(index);\n      carousel.current.style.transform = \"translateX(\" + (index * itemWidth) + \"px)\"; \n    }\n  }, [index, img]);\n\n  // 자동 슬라이드 기능을 구현\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setIndex((prevIndex) => {\n        // 맨 끝 index에 도달시 move클래스 추가와 위치 변경 조건문\n        if (prevIndex === lights.length - 2) {\n          setTimeout(() => {\n            setActive(\"move\");\n            setIndex(-1);\n          }, TIME); \n        } \n        setActive(\"\"); \n        return prevIndex + 1;\n      });\n    }, 3000);\n\n    // mouseEnter시 인터벌 제거\n    if (toggle === false) {\n      clearInterval(intervalId);\n    };\n    // 컴포넌트가 언마운트될 때 clearInterval로 인터벌 제거\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [lights.length, toggle]);\n\n  // mouseover시 toggle의 값과 반대로 저장하여 slide 재생 유무전달\n  const onToggle = () => {\n    setToggle((prev) => prev === false ? true : false);\n  };\n\n  const navigate = useNavigate();\n\n  const handleImageClick = () => {\n    // 이미지를 클릭했을 때 페이지 이동\n    // link 사용 시 transition이 적용되지 않아 useNavigate로 대체\n    navigate(`/Products/제품/상세페이지`, {\n      state: { id: lights[dotIndex].PRODUCT_PK, img: img[dotIndex] },\n    });\n  };\n\n  return (\n    <div className=\"banner\">\n      <div className=\"banner-header\" onMouseEnter={onToggle} onMouseLeave={onToggle}> {/* mouseover와는 다르게 자식은 해당안되고 오로지 자기 자신만 해당 */}\n        <div className=\"banner-container\">\n          {lights.h2 !== \"\" && \n          <div className=\"banner-title\">\n            <h2 className=\"banner-title-header\">{lights[dotIndex].PRODUCT_NM}</h2>\n          </div>}\n\n          {img !== \"\" && \n          <div className={`banner-images ${active === \"move\" ? active : \"\"}`} ref={carousel} onClick={handleImageClick}>\n            <img className=\"banner-images-index clone\" src={img[2]} alt=\"조명 사진\" />\n            <img className=\"banner-images-index\" src={img[0]} alt=\"조명 사진\" />\n            <img className=\"banner-images-index\" src={img[1]} alt=\"조명 사진\" />\n            <img className=\"banner-images-index\" src={img[2]} alt=\"조명 사진\" />\n            <img className=\"banner-images-index clone\" src={img[0]} alt=\"조명 사진\" ref={item}/>\n          </div>}\n\n          <span className=\"banner-pre\" onClick={onSlide}></span>\n          <span className=\"banner-next\" onClick={onSlide}></span>\n        </div>\n      </div>\n\n      <div className=\"banner-dot\">\n        <span id=\"0\" className={`banner-dot-index ${dotIndex === 0 ? \"current\" : \"\"}`} onClick={onDotCLick}></span>\n        <span id=\"1\" className={`banner-dot-index ${dotIndex === 1 ? \"current\" : \"\"}`} onClick={onDotCLick}></span>\n        <span id=\"2\" className={`banner-dot-index ${dotIndex === 2 ? \"current\" : \"\"}`} onClick={onDotCLick}></span>\n      </div>\n    </div>\n  );\n}\n\nexport default Banner;","import { useEffect, useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../style/article.css\";\n\nfunction Article(props) {\n  const [index, setIndex] = useState(0);\n  const carousel = useRef(null);\n  const item = useRef(null);\n  // props로 전달받은 저장 변수\n  const [hashData, setHashData] = useState(props.state.hash);\n  const [results, setResults] = useState(\"\"); // 불러온 데이터 저장\n  const [hashOfItem, setHashOfItem] = useState(\"\");\n\n  //몇번 이동해야하는지 알려주는 함수\n  const onSlide = (e) => {\n    const direction = e.target.className;\n    // 슬라이드의 자식 개수\n    const children = carousel.current.children.length;\n    // 5개만 보여지고 나머지는 클릭 가능횟수와 같으므로 -5\n    const clickTime = children - 5;\n\n    // 누른 방향에 따라서 index값 변화\n    setIndex(direction === \"article-pre\" ? (index !== 0 ? (index) => index + 1 : 0) : (index !== -clickTime ? (index) => index - 1 : -clickTime));\n  };\n\n  // index값 변경마다 slide 움직이게 하는 화살표함수\n  useEffect(() => {\n    // 데이터가 있을때만 계산\n    if (hashOfItem !== \"\") {\n      const itemWidth = item.current.clientWidth + 10;\n      carousel.current.style.transform =  \"translateX(\" + (index * itemWidth) + \"px)\"; \n    }\n  }, [index]);\n\n  // hashtag에 검색한 값이 포함되어있는지 확인하는 함수\n  useEffect(() => {\n    if (results !== \"\"){\n      results.map((result, index) => {\n        const check = result.HASHTAG.includes(props.state.title);\n        // hash의 유무확인 후 있으면 값에 저장\n        if (check) {\n          setHashOfItem((pre) => [...pre, result]);\n        };\n      })\n    }\n  }, [results, props.state.title])\n\n  // api 연결 부분\n  useEffect(() => {\n    async function getHashData() {\n      try{\n        const response = await fetch('api/main/hashtag', {\n          credentials: 'include',\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json;charset=UTF-8\",\n          },\n          body: JSON.stringify(hashData) \n        });\n\n        // 연결 성공 유무 판단\n        if (response.ok) {\n          const res = await response.json();\n          if (res.success) {\n            setResults(res.data);\n          } else {\n            alert(res.msg);\n          }\n        } else {\n          throw Error(\"서버 응답 실패\");\n        }\n      } catch(err) {\n        console.error(Error('불러오는 중 에러 발생'));\n      }\n    };\n\n    getHashData();\n  }, [hashData]);\n\n  const navigate = useNavigate();\n  // hash관련 상세제품으로 이동시켜주는 함수\n  const handleItem = (item) => {\n    const itemImg = `data:image/jpeg;base64,${item.IMG_DATA}`;\n    navigate(`/Products/제품/상세페이지`, {\n      state: { id: item.PRODUCT_PK, img: itemImg },\n    });\n  };\n\n  return (\n    <div className=\"article\">\n      <h2 className=\"article-title\">{props.state.title}</h2>\n\n      <div className=\"article-image\">\n        <span className=\"article-pre\" onClick={onSlide}></span>\n        <span className=\"article-next\" onClick={onSlide}></span>\n\n        <div className=\"article-recommend\" ref={carousel}>\n          {hashOfItem !== \"\" &&\n            hashOfItem.map((hashItem, index) => (\n              <img key={index} className=\"article-recommend-items\" src={`data:image/jpeg;base64,${hashItem.IMG_DATA}`} alt=\"상황별 조명 추천 사진\" ref={item} onClick={() => handleItem(hashItem)}/>\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Article;","import \"../style/Home.css\";\nimport Banner from \"../components/banner\";\nimport Article from \"../components/article\";\nimport { useEffect, useState } from \"react\";\n\nfunction Home( props ) {\n  const [islogin,setIslogin] = useState(\"\")\n  // 데이터를 요청하기위한 변수\n  const [hash, setHash] = useState(\n    {\n      hashtag1: \"아담\",\n      hashtag2: \"시크\",\n      hashtag3: \"팬던트\"\n    }, \n  );\n\n  useEffect(()=>{\n    if(props) {\n      setIslogin(props);\n    }\n  },[props])\n  \n  return (\n    <div className=\"home\">\n      <Banner />\n\n      <section className=\"home-article\">\n        <Article state={ {hash: hash, title: hash.hashtag1} }/>\n        <Article state={ {hash: hash, title: hash.hashtag2} }/>\n        <Article state={ {hash: hash, title: hash.hashtag3} }/>\n      </section>\n    </div>\n  );\n}\n\nexport default Home;"],"names":["_useState","useState","_useState2","_slicedToArray","index","setIndex","_useState3","_useState4","dotIndex","setDotIndex","_useState5","_useState6","toggle","setToggle","carousel","useRef","item","_useState7","_useState8","active","setActive","_useState9","IMG_DATA","PRODUCT_PK","PRODUCT_NM","_useState10","lights","setLights","_useState11","_useState12","img","setImg","useEffect","_getRandomData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","res","wrap","_context","prev","next","fetch","credentials","method","headers","body","JSON","stringify","sent","ok","json","success","data","alert","msg","Error","t0","console","error","stop","apply","arguments","getRandomData","decodeImages","_ref","_callee2","changeData","_context2","Promise","all","map","getImg","concat","onSlide","e","direction","target","className","setTimeout","onDotCLick","value","id","itemWidth","current","clientWidth","dotColor","style","transform","intervalId","setInterval","prevIndex","length","clearInterval","onToggle","navigate","useNavigate","_jsxs","children","onMouseEnter","onMouseLeave","h2","_jsx","ref","onClick","state","src","alt","props","hash","hashData","results","setResults","hashOfItem","setHashOfItem","clickTime","result","HASHTAG","includes","title","pre","_toConsumableArray","_getHashData","getHashData","hashItem","itemImg","handleItem","setIslogin","hashtag1","hashtag2","hashtag3","Banner","Article"],"sourceRoot":""}