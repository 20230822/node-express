{"version":3,"file":"static/js/162.41790413.chunk.js","mappings":"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","sources":["components/items.js","routes/Products.js"],"sourcesContent":["//a태그는 전체 새로고침이기에 link를 사용하여 특정 부분만 불러오기\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../style/item.css\";\r\n\r\nconst lights = [\r\n  {\r\n    title: \"first\",\r\n    description: \"good\",\r\n  },\r\n  {\r\n    title: \"second\",\r\n    description: \"bad\",\r\n  },\r\n  {\r\n    title: \"third\",\r\n    description: \"bad\",\r\n  },\r\n  {\r\n    title: \"fourth\",\r\n    description: \"bad\",\r\n  },\r\n  {\r\n    title: \"fifth\",\r\n    description: \"bad\",\r\n  },\r\n  {\r\n    title: \"fifth\",\r\n    description: \"bad\",\r\n  },\r\n  {\r\n    title: \"...\",\r\n    description: \"bad\",\r\n  },\r\n];\r\nfunction Items( {path} ) {\r\n  let pathName = \"\";\r\n  // 주소창 공백 제거를 위한 변수\r\n  if(path === \"펜던트\" || path === \"플로어 램프\" || path === \"테이블 램프\" || path === \"월 램프\")\r\n  {\r\n    pathName = path.replace(/ /g, \"\");\r\n  }\r\n  \r\n  return (\r\n    <div className=\"products-items\">\r\n      {lights.map((lights, index) => {\r\n        return (\r\n          <Link className=\"item-box\" to={`/Products/${pathName}/${lights.title}`} key={index} state={lights.title}>\r\n            <h1>{lights.title}</h1>\r\n            <p>{lights.description}</p>\r\n          </Link>\r\n        )\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\n// 인자를 받아올 때 사용해야 할 검사와 같은 기능\r\nItems.propTypes = {\r\n  path: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Items;","import { useLocation } from \"react-router\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport Items from \"../components/items\";\r\nimport \"../style/Products.css\";\r\n\r\n// 가져온 주소의 한글아스키값과 일치하는 램프 이름을 선언한 객체\r\nconst lampAddress = [\r\n  {\r\n    address: \"%ED%8E%9C%EB%8D%98%ED%8A%B8\",\r\n    lamp: \"펜던트\",\r\n  },\r\n  {\r\n    address: \"%ED%94%8C%EB%A1%9C%EC%96%B4%EB%9E%A8%ED%94%84\",\r\n    lamp: \"플로어 램프\",\r\n  },\r\n  {\r\n    address: \"%ED%85%8C%EC%9D%B4%EB%B8%94%EB%9E%A8%ED%94%84\",\r\n    lamp: \"테이블 램프\",\r\n  },\r\n  {\r\n    address: \"%EC%9B%94%EB%9E%A8%ED%94%84\",\r\n    lamp: \"월 램프\",\r\n  },\r\n];\r\n\r\nfunction Products() {\r\n  const [lightMethod, setLightMethod] = useState(\"\");\r\n  const [lampName, setLampName] = useState(\"\");\r\n  // 현재 주소의 경로이름만 가져오기\r\n  const location = useLocation().pathname;\r\n  const product = useRef();\r\n\r\n  \r\n\r\n  // 주소가 바뀔때마다 실행\r\n  useEffect(() => {\r\n    // substr은 삭제된 기능이라고 하므로 substring으로 대체 10자리까지 자르고 저장\r\n    const locationName = location.substring(10);\r\n    // 주소 이름과 매치되는 램프 이름 설정\r\n    const matchedLamp = lampAddress.find((lamp) => lamp.address === locationName);\r\n    \r\n    if (matchedLamp) {\r\n      setLampName(matchedLamp.lamp);\r\n    } else {\r\n      // 일치하는 주소 이름이 없는 경우 초기화\r\n      setLampName(\"\");\r\n    }\r\n  }, [lampName, location]);\r\n\r\n  const onClickLightM = (e) => {\r\n    setLightMethod(() => e.target.innerText);\r\n    if (lightMethod === e.target.innerText)\r\n      setLightMethod(\"\"); \r\n  };\r\n\r\n  // light 이미지를 바꾸기 위해 className을 바꿔주는 함수\r\n  useEffect(() => {\r\n    product.current.parentElement.firstChild.firstChild.firstChild.className = `light ${lampName}`;\r\n    product.current.parentElement.firstChild.firstChild.firstChild.firstChild.className = `light ${lightMethod}`;\r\n  }, [lampName, lightMethod]);\r\n\r\n  return (\r\n    <div className=\"products\" ref={product}>\r\n      <div className=\"products-filter\">\r\n        <div className=\"filter-method\">\r\n          <ul className=\"method\">\r\n            <li className={`method-each ${lightMethod === \"간접 조명\" ? \"active\" : \"\"}`} onClick={onClickLightM}>간접 조명</li>\r\n            <li className={`method-each ${lightMethod === \"반간접 조명\" ? \"active\" : \"\"}`} onClick={onClickLightM}>반간접 조명</li>\r\n            <li className={`method-each ${lightMethod === \"전반확산 조명\" ? \"active\" : \"\"}`} onClick={onClickLightM}>전반확산 조명</li>\r\n            <li className={`method-each ${lightMethod === \"반직접 조명\" ? \"active\" : \"\"}`} onClick={onClickLightM}>반직접 조명</li>\r\n            <li className={`method-each ${lightMethod === \"직접 조명\" ? \"active\" : \"\"}`} onClick={onClickLightM}>직접 조명</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"products-root\">\r\n        <span className=\"root parent\">{lampName}</span>\r\n        {lightMethod !== \"\" ? <span className=\"root arrow\"></span>: \"\"}\r\n        {lightMethod !== \"\" ? <span className=\"root\">{lightMethod}</span>: \"\"}\r\n      </div>\r\n\r\n      <Items \r\n        path={lampName}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Products;"],"names":["lights","title","description","_ref","path","pathName","replace","_jsx","className","children","map","index","_jsxs","Link","to","concat","state","lampAddress","address","lamp","_useState","useState","_useState2","_slicedToArray","lightMethod","setLightMethod","_useState3","_useState4","lampName","setLampName","location","useLocation","pathname","product","useRef","useEffect","locationName","substring","matchedLamp","find","onClickLightM","e","target","innerText","current","parentElement","firstChild","ref","onClick","Items"],"sourceRoot":""}