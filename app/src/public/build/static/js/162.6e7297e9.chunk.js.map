{"version":3,"file":"static/js/162.6e7297e9.chunk.js","mappings":"uJAKMA,EAAS,CACb,CACEC,MAAO,QACPC,YAAa,QAEf,CACED,MAAO,SACPC,YAAa,OAEf,CACED,MAAO,QACPC,YAAa,OAEf,CACED,MAAO,SACPC,YAAa,OAEf,CACED,MAAO,QACPC,YAAa,OAEf,CACED,MAAO,QACPC,YAAa,OAEf,CACED,MAAO,MACPC,YAAa,QA+BjB,MA5BA,SAAcC,GAAY,IAATC,EAAID,EAAJC,KACXC,EAAW,GAOf,MALY,uBAATD,GAA2B,oCAATA,GAA8B,oCAATA,GAA8B,wBAATA,IAE7DC,EAAWD,EAAKE,QAAQ,KAAM,MAI9BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,SAC5BT,EAAOU,KAAI,SAACV,EAAQW,GACnB,OAEEC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACL,UAAU,WAAWM,GAAE,aAAAC,OAAeV,EAAQ,KAAAU,OAAIf,EAAOC,OAAQQ,SAAA,EACrEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKT,EAAOC,SACZM,EAAAA,EAAAA,KAAA,KAAAE,SAAIT,EAAOE,gBAFgES,EAKjF,KAGN,C,oHClDMK,EAAc,CAClB,CACEC,QAAS,8BACTC,KAAM,sBAER,CACED,QAAS,gDACTC,KAAM,mCAER,CACED,QAAS,gDACTC,KAAM,mCAER,CACED,QAAS,8BACTC,KAAM,wBA+EV,MA3EA,WACE,IAAAC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAAoCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAgCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,GAAWC,EAAAA,EAAAA,MAAcC,SACzBC,GAAUC,EAAAA,EAAAA,WAGhBC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAeN,EAASO,UAAU,IAElCC,EAAczB,EAAY0B,MAAK,SAACxB,GAAI,OAAKA,EAAKD,UAAYsB,CAAY,IAG1EP,EADES,EACUA,EAAYvB,KAGZ,GAEhB,GAAG,CAACa,EAAUE,IAEd,IAAMU,EAAgB,SAACC,GACrBpB,GAAe,kBAAMoB,EAAEC,OAAOC,SAAS,IACnCvB,IAAgBqB,EAAEC,OAAOC,WAC3BtB,EAAe,GACnB,EAEMuB,EAAgB,SAACH,GACrBhB,GAAc,kBAAMgB,EAAEC,OAAOC,SAAS,IAClCnB,IAAeiB,EAAEC,OAAOC,WAC1BlB,EAAc,GAClB,EAOA,OAJAU,EAAAA,EAAAA,YAAU,WACRF,EAAQY,QAAQC,cAAcC,WAAWA,WAAWA,WAAW1C,UAAS,SAAAO,OAAYgB,EAAQ,KAAAhB,OAAIQ,EAAW,KAAAR,OAAIY,EACjH,GAAG,CAACA,EAAYJ,EAAaQ,KAG3BnB,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,WAAW2C,IAAKf,EAAQ3B,SAAA,EACrCG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAC5BG,EAAAA,EAAAA,MAAA,MAAIJ,UAAU,SAAQC,SAAA,EACpBF,EAAAA,EAAAA,KAAA,MAAIC,UAAS,eAAAO,OAAiC,8BAAhBQ,EAA0B,SAAW,IAAM6B,QAAST,EAAclC,SAAC,+BACjGF,EAAAA,EAAAA,KAAA,MAAIC,UAAS,eAAAO,OAAiC,qCAAhBQ,EAA4B,SAAW,IAAM6B,QAAST,EAAclC,SAAC,sCACnGF,EAAAA,EAAAA,KAAA,MAAIC,UAAS,eAAAO,OAAiC,0CAAhBQ,EAA4B,SAAW,IAAM6B,QAAST,EAAclC,SAAC,2CACnGF,EAAAA,EAAAA,KAAA,MAAIC,UAAS,eAAAO,OAAiC,qCAAhBQ,EAA4B,SAAW,IAAM6B,QAAST,EAAclC,SAAC,sCACnGF,EAAAA,EAAAA,KAAA,MAAIC,UAAS,eAAAO,OAAiC,8BAAhBQ,EAA0B,SAAW,IAAM6B,QAAST,EAAclC,SAAC,oCAGrGF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BG,EAAAA,EAAAA,MAAA,MAAIJ,UAAU,QAAOC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,MAAIC,UAAS,cAAAO,OAA+B,SAAfY,EAAwB,SAAW,IAAMyB,QAASL,EAActC,SAAC,UAC9FF,EAAAA,EAAAA,KAAA,MAAIC,UAAS,cAAAO,OAA+B,UAAfY,EAAyB,SAAW,IAAMyB,QAASL,EAActC,SAAC,WAC/FF,EAAAA,EAAAA,KAAA,MAAIC,UAAS,cAAAO,OAA+B,WAAfY,EAA0B,SAAW,IAAMyB,QAASL,EAActC,SAAC,oBAKtGG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAEsB,IACd,KAAhBR,GAAqBhB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAsB,GAC3C,KAAhBe,GAAqBhB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMC,SAAEc,IAAqB,IACnEhB,EAAAA,EAAAA,KAAA,QAAMC,UAAS,cAAAO,OAA+B,KAAfY,EAAoBA,EAAa,UAGlEpB,EAAAA,EAAAA,KAAC8C,EAAAA,EAAK,CACJjD,KAAM2B,MAId,C","sources":["components/items.js","routes/Products.js"],"sourcesContent":["//a태그는 전체 새로고침이기에 link를 사용하여 특정 부분만 불러오기\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"../style/item.css\";\n\nconst lights = [\n  {\n    title: \"first\",\n    description: \"good\",\n  },\n  {\n    title: \"second\",\n    description: \"bad\",\n  },\n  {\n    title: \"third\",\n    description: \"bad\",\n  },\n  {\n    title: \"fourth\",\n    description: \"bad\",\n  },\n  {\n    title: \"fifth\",\n    description: \"bad\",\n  },\n  {\n    title: \"fifth\",\n    description: \"bad\",\n  },\n  {\n    title: \"...\",\n    description: \"bad\",\n  },\n];\nfunction Items( {path} ) {\n  let pathName = \"\";\n  // 주소창 공백 제거를 위한 변수\n  if(path === \"펜던트\" || path === \"플로어 램프\" || path === \"테이블 램프\" || path === \"월 램프\")\n  {\n    pathName = path.replace(/ /g, \"\");\n  }\n  \n  return (\n    <div className=\"products-items\">\n      {lights.map((lights, index) => {\n        return (\n          \n          <Link className=\"item-box\" to={`/Products/${pathName}/${lights.title}`} key={index}>\n            <h1>{lights.title}</h1>\n            <p>{lights.description}</p>\n          </Link>\n        )\n      })}\n    </div>\n  );\n}\n\n// 인자를 받아올 때 사용해야 할 검사와 같은 기능\nItems.propTypes = {\n  path: PropTypes.string.isRequired,\n};\n\nexport default Items;","import { useLocation } from \"react-router\";\nimport { useEffect, useState, useRef } from \"react\";\nimport Items from \"../components/items\";\nimport \"../style/Products.css\";\n\n// 가져온 주소의 한글아스키값과 일치하는 램프 이름을 선언한 객체\nconst lampAddress = [\n  {\n    address: \"%ED%8E%9C%EB%8D%98%ED%8A%B8\",\n    lamp: \"펜던트\",\n  },\n  {\n    address: \"%ED%94%8C%EB%A1%9C%EC%96%B4%EB%9E%A8%ED%94%84\",\n    lamp: \"플로어 램프\",\n  },\n  {\n    address: \"%ED%85%8C%EC%9D%B4%EB%B8%94%EB%9E%A8%ED%94%84\",\n    lamp: \"테이블 램프\",\n  },\n  {\n    address: \"%EC%9B%94%EB%9E%A8%ED%94%84\",\n    lamp: \"월 램프\",\n  },\n];\n\nfunction Products() {\n  const [lightMethod, setLightMethod] = useState(\"\");\n  const [lightColor, setLightColor] = useState(\"\");\n  const [lampName, setLampName] = useState(\"\");\n  // 현재 주소의 경로이름만 가져오기\n  const location = useLocation().pathname;\n  const product = useRef();\n\n  // 주소가 바뀔때마다 실행\n  useEffect(() => {\n    // substr은 삭제된 기능이라고 하므로 substring으로 대체 10자리까지 자르고 저장\n    const locationName = location.substring(10);\n    // 주소 이름과 매치되는 램프 이름 설정\n    const matchedLamp = lampAddress.find((lamp) => lamp.address === locationName);\n    \n    if (matchedLamp) {\n      setLampName(matchedLamp.lamp);\n    } else {\n      // 일치하는 주소 이름이 없는 경우 초기화\n      setLampName(\"\");\n    }\n  }, [lampName, location]);\n\n  const onClickLightM = (e) => {\n    setLightMethod(() => e.target.innerText);\n    if (lightMethod === e.target.innerText)\n      setLightMethod(\"\"); \n  };\n\n  const onClickLightC = (e) => {\n    setLightColor(() => e.target.innerText);\n    if (lightColor === e.target.innerText)\n      setLightColor(\"\"); \n  };\n\n  // light 이미지를 바꾸기 위해 className을 바꿔주는 함수\n  useEffect(() => {\n    product.current.parentElement.firstChild.firstChild.firstChild.className = `light ${lampName} ${lightMethod} ${lightColor}`;\n  }, [lightColor, lightMethod, lampName]);\n\n  return (\n    <div className=\"products\" ref={product}>\n      <div className=\"products-filter\">\n        <div className=\"filter-method\">\n          <ul className=\"method\">\n            <li className={`method-each ${lightMethod === \"간접 조명\" ? \"active\" : \"\"}`} onClick={onClickLightM}>간접 조명</li>\n            <li className={`method-each ${lightMethod === \"반 간접 조명\" ? \"active\" : \"\"}`} onClick={onClickLightM}>반 간접 조명</li>\n            <li className={`method-each ${lightMethod === \"전반확산 조명\" ? \"active\" : \"\"}`} onClick={onClickLightM}>전반확산 조명</li>\n            <li className={`method-each ${lightMethod === \"반 직접 조명\" ? \"active\" : \"\"}`} onClick={onClickLightM}>반 직접 조명</li>\n            <li className={`method-each ${lightMethod === \"직접 조명\" ? \"active\" : \"\"}`} onClick={onClickLightM}>직접 조명</li>\n          </ul>\n        </div>\n        <div className=\"filter-color\">\n          <ul className=\"color\">\n            <li className={`color-each ${lightColor === \"blue\" ? \"active\" : \"\"}`} onClick={onClickLightC}>blue</li>\n            <li className={`color-each ${lightColor === \"white\" ? \"active\" : \"\"}`} onClick={onClickLightC}>white</li>\n            <li className={`color-each ${lightColor === \"orange\" ? \"active\" : \"\"}`} onClick={onClickLightC}>orange</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"products-root\">\n        <span className=\"root parent\">{lampName}</span>\n        {lightMethod !== \"\" ? <span className=\"root arrow\"></span>: \"\"}\n        {lightMethod !== \"\" ? <span className=\"root\">{lightMethod}</span>: \"\"}\n        <span className={`root-color ${lightColor !== \"\" ? lightColor : \"\"}`}></span>\n      </div>\n\n      <Items \n        path={lampName}\n      />\n    </div>\n  );\n}\n\nexport default Products;"],"names":["lights","title","description","_ref","path","pathName","replace","_jsx","className","children","map","index","_jsxs","Link","to","concat","lampAddress","address","lamp","_useState","useState","_useState2","_slicedToArray","lightMethod","setLightMethod","_useState3","_useState4","lightColor","setLightColor","_useState5","_useState6","lampName","setLampName","location","useLocation","pathname","product","useRef","useEffect","locationName","substring","matchedLamp","find","onClickLightM","e","target","innerText","onClickLightC","current","parentElement","firstChild","ref","onClick","Items"],"sourceRoot":""}