{"version":3,"file":"static/js/273.01d0626e.chunk.js","mappings":"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","sources":["routes/Detail.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"../style/Detail.css\";\nimport { useLocation } from \"react-router\";\n\nfunction Detail() {\n  // 요청해서 받아온 데이터 저장 변수\n  const [detailData, setDetailData] = useState({\n    name: \"\",\n    price: \"\",\n    size: \"\",\n    material: \"\",\n    weight: \"\",\n    type: \"\",\n    made: \"\",\n    hash: \"\",\n    text: \"\",\n    img: [],\n  })\n  const [img, setImg] = useState(\"\");\n  const detailColors = [\"상품색\", \"전구온도\"];\n  // 데이터 불러올떄 사용할 제품 아이디 값 변수\n  const [product, setProduct] = useState({id: \"\"}); \n  // state로 전달받을 변수들\n  const location = useLocation();\n  const productId = location.state.id;\n  const productImg = location.state.img;\n\n  // 전달받은 인자들 요청위해 id값 넣어주기\n  useEffect(() => {\n    setProduct({id: productId});\n  }, [productId]);\n\n  // 처음한번만 데이터 받아오기\n  useEffect(() => {\n    async function getItemData() {\n      if (product.id !== \"\") {\n        try{\n          const response = await fetch('https://port-0-node-express-jvvy2blmegkftc.sel5.cloudtype.app/api/product/detailInfo', {\n            credentials: 'include',\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(product),\n          });\n\n          // 연결 성공 유무 판단\n          if (response.ok) {\n            const res = await response.json();\n            if (res.success) {\n              // 데이터 저장\n              setDetailData({\n                name: res.data.PRODUCT_NM,\n                price: res.data.PRICE,\n                size:res.data.SIZE,\n                material: res.data.MATERIAL,\n                weight: res.data.WEIGHT,\n                type: res.data.LIGHT_TYPE,\n                made: res.data.COUNTRY,\n                hash: res.data.HASHTAG,\n                text: res.data.DESCRIBE,\n                img: res.dataImages,\n              });\n            } else {\n              alert(res.msg);\n            }\n          } else {\n            throw Error(\"서버 응답 실패\");\n          }\n        } catch (err) {\n          console.error(Error('상품데이터 불러오는 중 오류'));\n        }\n    }};\n\n    getItemData();\n  }, [product]);\n\n// base64를 주소이미지로 변환과정\nuseEffect(() => {\n  const decodeImage = async () => {\n    if (detailData.img !== undefined) {\n      const changeData = await Promise.all(detailData.img.map((getImg) => {\n        const base64Data = `data:image/jpeg;base64,${getImg.data}`;\n        getImg = base64Data;\n        return getImg;\n      }));\n      setImg(changeData);\n    }\n  }\n  \n  decodeImage();\n}, [detailData]);\n\nreturn (\n    <div className=\"detail\">  \n      <div className=\"detail-header\">\n        <img className=\"detail-left\" src={productImg} alt=\"제품 사진\" />\n        \n        <div className=\"detail-right\">\n          <h1 className=\"detail-right-title\">{detailData.name}</h1>\n          <div className=\"detail-right-description\">\n            {detailData.size && <div className=\"detail-type\">사이즈: {detailData.size}</div>}\n            {detailData.material &&  <div className=\"detail-type\">재질: {detailData.material}</div>}\n            {detailData.weight && <div className=\"detail-type\">무게: {detailData.weight}</div>}\n            {detailData.type && <div className=\"detail-type\">전구타입: {detailData.type}</div>}\n            {detailData.made && <div className=\"detail-type\">제조나라: {detailData.made}</div>}\n            {detailData.hash && <div className=\"detail-type\">{detailData.hash}</div>}\n            {detailData.text && <div className=\"detail-type\">{detailData.text}</div>}\n            {detailColors.map((color, index) => {\n              return(\n                <div className=\"detail-color\" key={index}>\n                  <h3 className=\"detail-color-title\">{color}</h3>\n                  <div className=\"detail-color-boxes\">\n                    <span className=\"detail-color-box\"></span>\n                    <span className=\"detail-color-box\"></span>\n                    <span className=\"detail-color-box\"></span>\n                  </div>\n                </div>\n              )\n            })}\n            <div className=\"detail-price\">{detailData.price} 원</div>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"detail-content\">\n        <p className=\"detail-content-text\">{detailData.text}</p>\n        <div className=\"detail-content-space\">\n          {img !== undefined && <img className=\"detail-content-space-picture\" src={img[1]} alt=\"연출사진 1\" />}\n          <img className=\"detail-content-space-picture\" src=\"/\" alt=\"연출사진 1\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Detail;"],"names":["_useState","useState","name","price","size","material","weight","type","made","hash","text","img","_useState2","_slicedToArray","detailData","setDetailData","_useState3","_useState4","setImg","_useState5","id","_useState6","product","setProduct","location","useLocation","productId","state","productImg","useEffect","_getItemData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","res","wrap","_context","prev","next","fetch","credentials","method","headers","body","JSON","stringify","sent","ok","json","success","data","PRODUCT_NM","PRICE","SIZE","MATERIAL","WEIGHT","LIGHT_TYPE","COUNTRY","HASHTAG","DESCRIBE","dataImages","alert","msg","Error","t0","console","error","stop","apply","arguments","getItemData","decodeImage","_ref","_callee2","changeData","_context2","undefined","Promise","all","map","getImg","concat","_jsxs","className","children","_jsx","src","alt","color","index"],"sourceRoot":""}