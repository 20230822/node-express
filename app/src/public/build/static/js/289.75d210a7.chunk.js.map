{"version":3,"file":"static/js/289.75d210a7.chunk.js","mappings":"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","sources":["components/banner.js","components/article.js","routes/Home.js"],"sourcesContent":["// 기존에 쓰던 querySelector은 dom을 참조 react는 가상돔이라 사용을 자제해야 한다. \r\n// 대신 사용하는 것이 useRef란 것 사용시 {변수명.current}\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport \"../style/banner.css\"\r\nimport image1 from \"../images/banner1.jpeg\";\r\nimport image2 from \"../images/banner2.jpeg\";\r\nimport image3 from \"../images/banner3.jpeg\";\r\n\r\nfunction Banner() {\r\n  const [index, setIndex] = useState(0);\r\n  const [dotIndex, setDotIndex] = useState(1);\r\n  const [toggle, setToggle] =useState(true);\r\n  // document.querySelector과 같은 기능 {변수명.current로 사용해야함}\r\n  const carousel = useRef(null);\r\n  const item = useRef(null);\r\n  const [active, setActive] = useState(\"\");\r\n  const TIME = 300;\r\n  const lights = [\r\n    {\r\n      h2: \"lamp1\",\r\n      p: \"this is the lamp1\",\r\n    },\r\n    {\r\n      h2: \"lamp2\",\r\n      p: \"this is the lamp2\",\r\n    },\r\n    {\r\n      h2: \"lamp3\",\r\n      p: \"this is the lamp3\",\r\n    },\r\n  ];\r\n\r\n  // slide 눈속임을 이용한 함수 젤끝까지 이동하면 몇초뒤 transition을 없애고 처음으로 이동\r\n  const onSlide = (e) => {\r\n    // 누른 방향에 따라서 index값 변화\r\n    const direction = e.target.className;\r\n    setIndex(direction === \"banner-pre\" ? (index) => index + 1 : (index) => index - 1);\r\n    \r\n    // 왼쪽으로 가다 끝을 만나면 맨 오른쪽으로 이동\r\n    if (index === 1) {\r\n      if (direction === \"banner-pre\")\r\n        setTimeout(() => {\r\n          setIndex(-1);\r\n          setActive(\"move\");\r\n        }, TIME);   \r\n    } else if (index !== 1)\r\n        setActive(\"\");\r\n    // 오른쪽으로 가다 끝을 만나면 맨 왼쪽으로 이동\r\n    if (index === -1) {\r\n      if (direction === \"banner-next\")\r\n        setTimeout(() => {\r\n          setIndex(1);\r\n          setActive(\"move\");\r\n        }, TIME);   \r\n    } else if (index !== -1)\r\n        setActive(\"\");\r\n  };\r\n\r\n  // dot을 누르면 그 id값을 가져와 index에 넣어준다.\r\n  const onDotCLick = (e) => {\r\n    let value = 0;\r\n\r\n    // id의 값이 숫자가 아니라서 == 두개만 사용\r\n    if (e.target.id === \"0\")\r\n      value = 1;\r\n    else if (e.target.id === \"1\")\r\n      value = 0;\r\n    else if (e.target.id === \"2\")\r\n      value = -1;\r\n    \r\n    setIndex(value);\r\n    // 화살표클릭과 겹칠 시 오류를 해결하기 위해 class초기화 하기\r\n    setActive(\"\"); \r\n  };\r\n\r\n  // index에 맞게 dot의 값을 바꾸어 전달하여 클래스를 생성할 수 있게하는 함수\r\n  const dotColor = (index) => {\r\n    let value = 0;\r\n\r\n    if (index === 0)\r\n      value = 1;\r\n    else if (index === 1)\r\n      value = 0;\r\n    else if (index === -1 || index === 2)\r\n      value = 2; \r\n    setDotIndex(value);\r\n  };\r\n\r\n  // index값 변경마다 slide 움직이게 하는 화살표함수\r\n  useEffect(() => {\r\n    const itemWidth = item.current.clientWidth + 10;\r\n\r\n    dotColor(index);\r\n    carousel.current.style.transform = \"translateX(\" + (index * itemWidth) + \"px)\"; \r\n  }, [index]);\r\n\r\n  // 자동 슬라이드 기능을 구현\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setIndex((prevIndex) => {\r\n        // 맨 끝 index에 도달시 move클래스 추가와 위치 변경 조건문\r\n        if (prevIndex === lights.length - 2) {\r\n          setTimeout(() => {\r\n            setActive(\"move\");\r\n            setIndex(-1);\r\n          }, TIME); \r\n        } \r\n        setActive(\"\"); \r\n        return prevIndex + 1;\r\n      });\r\n    }, 3000);\r\n\r\n    // mouseEnter시 인터벌 제거\r\n    if (toggle === false) {\r\n      clearInterval(intervalId);\r\n    };\r\n    // 컴포넌트가 언마운트될 때 clearInterval로 인터벌 제거\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [lights.length, toggle]);\r\n\r\n  // mouseover시 toggle의 값과 반대로 저장하여 slide 재생 유무전달\r\n  const onToggle = () => {\r\n    setToggle((prev) => prev === false ? true : false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"banner\">\r\n      <div className=\"banner-header\" onMouseEnter={onToggle} onMouseLeave={onToggle}> {/* mouseover와는 다르게 자식은 해당안되고 오로지 자기 자신만 해당 */}\r\n        <div className=\"banner-title\">\r\n          <h2 className=\"banner-title-header\">{lights[dotIndex].h2}</h2>\r\n          <p>{lights[dotIndex].p}</p>\r\n        </div>\r\n\r\n        <div className={`banner-images ${active === \"move\" ? active : \"\"}`} ref={carousel}>\r\n          <img className=\"banner-images-index clone\" src={image3} alt=\"조명 사진\" />\r\n          <img className=\"banner-images-index\" src={image1} alt=\"조명 사진\" ref={item}/>\r\n          <img className=\"banner-images-index\" src={image2} alt=\"조명 사진\" />\r\n          <img className=\"banner-images-index\" src={image3} alt=\"조명 사진\" />\r\n          <img className=\"banner-images-index clone\" src={image1} alt=\"조명 사진\" ref={item}/>\r\n        </div>  \r\n        \r\n        <div className=\"banner-arrow\">\r\n          <span className=\"banner-pre\" onClick={onSlide}></span>\r\n          <span className=\"banner-next\" onClick={onSlide}></span>\r\n        </div>    \r\n      </div>\r\n\r\n      <div className=\"banner-dot\">\r\n        <span id=\"0\" className={`banner-dot-index ${dotIndex === 0 ? \"current\" : \"\"}`} onClick={onDotCLick}></span>\r\n        <span id=\"1\" className={`banner-dot-index ${dotIndex === 1 ? \"current\" : \"\"}`} onClick={onDotCLick}></span>\r\n        <span id=\"2\" className={`banner-dot-index ${dotIndex === 2 ? \"current\" : \"\"}`} onClick={onDotCLick}></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Banner;","import { useEffect, useRef, useState } from \"react\";\r\nimport \"../style/article.css\";\r\n\r\nfunction Article() {\r\n  const [index, setIndex] = useState(0);\r\n  const carousel = useRef(null);\r\n  const item = useRef(null);\r\n\r\n  //몇번 이동해야하는지 알려주는 함수\r\n  const onSlide = (e) => {\r\n    const direction = e.target.className;\r\n    // 슬라이드의 자식 개수\r\n    const children = carousel.current.children.length;\r\n    // 5개만 보여지고 나머지는 클릭 가능횟수와 같으므로 -5\r\n    const clickTime = children - 5;\r\n\r\n    // 누른 방향에 따라서 index값 변화\r\n    setIndex(direction === \"article-pre\" ? (index !== 0 ? (index) => index + 1 : 0) : (index !== -clickTime ? (index) => index - 1 : -clickTime));\r\n  };\r\n\r\n  // index값 변경마다 slide 움직이게 하는 화살표함수\r\n  useEffect(() => {\r\n    const itemWidth = item.current.clientWidth + 10;\r\n    carousel.current.style.transform =  \"translateX(\" + (index * itemWidth) + \"px)\"; \r\n  }, [index]);\r\n\r\n  return (\r\n    <div className=\"article\">\r\n      <h2 className=\"article-title\">조용한 분위기</h2>\r\n\r\n      <div className=\"article-image\">\r\n        <div className=\"article-arrow\">\r\n          <span className=\"article-pre\" onClick={onSlide}></span>\r\n          <span className=\"article-next\" onClick={onSlide}></span>\r\n        </div>\r\n\r\n        <div className=\"article-recommend\" ref={carousel}>\r\n          <img className=\"article-recommend-items\" src=\"\" alt=\"상황별 조명 추천 사진\" ref={item}/>\r\n          <img className=\"article-recommend-items\" src=\"\" alt=\"상황별 조명 추천 사진\" />\r\n          <img className=\"article-recommend-items\" src=\"\" alt=\"상황별 조명 추천 사진\" />\r\n          <img className=\"article-recommend-items\" src=\"\" alt=\"상황별 조명 추천 사진\" />\r\n          <img className=\"article-recommend-items\" src=\"\" alt=\"상황별 조명 추천 사진\" />\r\n          <img className=\"article-recommend-items\" src=\"\" alt=\"상황별 조명 추천 사진\" />\r\n          <img className=\"article-recommend-items\" src=\"\" alt=\"상황별 조명 추천 사진\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Article;","import \"../style/Home.css\";\r\nimport Banner from \"../components/banner\";\r\nimport Article from \"../components/article\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <Banner />\r\n\r\n      <section className=\"home-article\">\r\n        <Article />\r\n        <Article />\r\n        <Article />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;"],"names":["_useState","useState","_useState2","_slicedToArray","index","setIndex","_useState3","_useState4","dotIndex","setDotIndex","_useState5","_useState6","toggle","setToggle","carousel","useRef","item","_useState7","_useState8","active","setActive","lights","h2","p","onSlide","e","direction","target","className","setTimeout","onDotCLick","value","id","useEffect","itemWidth","current","clientWidth","dotColor","style","transform","intervalId","setInterval","prevIndex","length","clearInterval","onToggle","prev","_jsxs","children","onMouseEnter","onMouseLeave","_jsx","concat","ref","src","image3","alt","image1","image2","onClick","clickTime","Banner","Article"],"sourceRoot":""}