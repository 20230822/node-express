{"version":3,"file":"static/js/433.411d2de1.chunk.js","mappings":"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","sources":["components/interest.js","components/history.js","components/basket.js","routes/MyPage.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport \"../style/interest.css\";\n\nfunction Interest() {\n  const [products, setProducts] = useState([\n    {\n      PRODUCT_FK: \"\",\n      IMG_DATA: \"\",\n    },\n  ]);\n  const [loading, setLoading] = useState(true); // 데이터 로딩 중 여부\n\n  async function apiInterest() {\n    // 정보 전달 함수\n    try {\n      const response = await fetch('api/mypage/wishlist', {\n        credentials: 'include',\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"\",\n        },\n        body: JSON.stringify(products),\n      });\n      if (response.ok) {\n        const res = await response.json();\n        if (res.success) {\n          setLoading(false);\n          setProducts(res.data);\n        } else {\n          alert(res.msg);\n        }\n      } else {\n        setLoading(true);\n        throw Error(\"서버 응답 실패\");\n      }\n    } catch (err) {\n      setLoading(true);\n      console.error(Error('로그인 중 에러 발생'));\n    }\n  };\n\n  const carousel = useRef(null);\n\n\n  useEffect(() => {\n    apiInterest();\n  }, [])\n\n  return (\n    <div className=\"interest\">\n      <div className=\"article-image\">\n        <div className=\"items-recommend\" ref={carousel}>\n        {loading === false ? \n          products.map((product, index) => (\n            <img key={index} className=\"items\" \n            src = {`data:image/jpeg;base64,${product.IMG_DATA}`} alt={index}/> )) \n          : <div className=\"interest-loading\">loading...</div>\n        }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Interest;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport \"../style/history.css\";\n\nfunction History() {\n  const [products, setProducts] = useState([\n    {\n      PRODUCT_FK: \"\",\n      PRODUCT_NM: \"\",\n      ORDER_NO: \"\",\n      PRICE:\"\",\n      ORDER_DT: \"\",\n      IMG_DATA: \"\"\n    },\n  ]);\n\n  async function apiHistory() {\n    // 정보 전달 함수\n    try {\n      const response = await fetch('api/mypage/order', {\n        credentials: 'include',\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"\",\n        },\n        body: JSON.stringify(products),\n      });\n      if (response.ok) {\n        const res = await response.json();\n        if (res.success) {\n          setProducts(res.data);\n        } else {\n          alert(res.msg);\n        }\n      } else {\n        throw Error(\"서버 응답 실패\");\n      }\n    } catch (err) {\n      console.error(Error('로그인 중 에러 발생'));\n    }\n  };\n\n  useEffect(() => {\n    apiHistory();\n  }, [])\n\n\n  return (\n    <div className=\"history\">\n      <form className=\"inter\" action=\"#\">\n        <table className=\"history-table\">\n          <thead>\n          <tr>\n          <th className=\"productDescription\">상품명</th>\n          <th>총수량</th>\n          <th>판매가</th>\n          <th>주문일자</th>\n          </tr>\n          </thead>\n          <tbody>\n          {products.map((product, index) => (\n            <tr key={index} className=\"basketTr\">\n              <td>\n                <div className=\"historyProduct\">\n                  <img src = {`data:image/jpeg;base64,${product.IMG_DATA}`} alt={index} className=\"productImage\" />\n                  <div className=\"basketProductName\">\n                    <h2 className=\"ProductName\">\n                      {product.PRODUCT_NM}\n                    </h2>\n                  </div>\n                </div>\n              </td>\n              <td className=\"history-quantity\">{product.ORDER_NO}</td>\n              <td className=\"history-subtotal\">{product.PRICE}</td>\n              <td className=\"history-date\">{new Date(product.ORDER_DT).toLocaleString()}</td>\n            </tr>\n          ))}\n          </tbody>\n        </table>\n      </form>\n    </div>\n  );\n}\n\nexport default History;\n","import React, { useState, useEffect } from \"react\";\nimport \"../style/basket.css\"\n\nfunction Basket() {\n  const [products, setProducts] = useState([\n    {\n      PRODUCT_NM: \"\",\n      QUANTITY: \"\",\n      PRICE: \"\",\n      IMG_DATA: \"\",\n    },\n  ]);\n\n  async function apiBasket() {\n    // 정보 전달 함수\n    try {\n      const response = await fetch('api/mypage/cart', {\n        credentials: 'include',\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"\",\n        },\n        body: JSON.stringify(products),\n      });\n      if (response.ok) {\n        const res = await response.json();\n        if (res.success) {\n          setProducts(res.data);\n        } else {\n          alert(res.msg);\n        }\n      } else {\n        throw Error(\"서버 응답 실패\");\n      }\n    } catch (err) {\n      console.error(Error('로그인 중 에러 발생'));\n    }\n  };\n\n  useEffect(() => {\n    apiBasket();\n  }, []);\n\n\n  return (\n    <div className=\"basket\">\n      <form className=\"basket_container\">\n        <div className=\"left\">\n          <table className=\"basketTable\">\n            <thead>\n              <tr>\n                <th>\n                  <input type=\"checkbox\" name=\"all\" className=\"checkboxAll\" />\n                </th>\n                <th className=\"productDescription\">상품명</th>\n                <th>총수량</th>\n                <th>판매가</th>\n                <th>총액</th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((product, index) => (\n                <tr key={index} className=\"basketTr\">\n                  <td className=\"basketCheckbox\">\n                    <input type=\"checkbox\" name={index} />\n                  </td>\n                  <td>\n                    <div className=\"basketProduct\">\n                      <img src={`data:image/jpeg;base64,${product.IMG_DATA}`} alt={index} className=\"productImage\" />\n                      <div className=\"basketProductName\">\n                        <h2 className=\"ProductName\">\n                          {product.PRODUCT_NM}\n                        </h2>\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"basket-quantity\">{product.QUANTITY}</td>\n                  <td className=\"basket-price\">{product.PRICE}</td>\n                  <td className=\"basket-subtotal\">{product.PRICE}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <div className=\"total\">\n          <h2>주문 총합</h2>\n          <table>\n            <thead>\n              <tr>\n                <td>상품수</td>\n                <td>{products.length}</td>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>전체주문금액</td>\n                <td>\n                  {products.reduce((acc, product) => acc + product.PRICE, 0)}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <input type=\"submit\" value=\"주문하기\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Basket;","import { useEffect, useState } from \"react\";\nimport \"../style/MyPage.css\";\nimport Interest from \"../components/interest\";\nimport History from \"../components/history\";\nimport Basket from \"../components/basket\";\n\nfunction MyPage() {\n  const [category, setLightMethod] = useState(\"\");\n  const [formMypage, setFormMypage] = useState({\n    USER_NM: \"\",\n    USER_ID: \"\",\n    PROFILE_DATA: \"\",\n  });\n\n  const onClickCategory = (e) => {\n    setLightMethod((pre) => e.target.innerText);\n    if (category === e.target.innerText)\n      setLightMethod(\"\");\n  };\n\n  useEffect(()=>{\n    async function MypageApi() {\n      try {\n        const response = await fetch('api/mypage', {\n          credentials: 'include',\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(formMypage),\n        });\n        if (response.ok) {\n          const res = await response.json();\n          \n          if (res.success) {\n            setFormMypage({\n              USER_NM: res.data[0].USER_NM,\n              USER_ID: res.data[0].USER_ID,\n              PROFILE_DATA: res.data[0].PROFILE_DATA,\n            });\n          } else {\n            alert(res.msg);\n          }\n        } else {\n          throw Error(\"서버 응답 실패\");\n        }\n      } catch (err) {\n        console.error(Error('불러오는 중 에러 발생'));\n      }\n    };\n      \n    MypageApi();\n  }, []);\n\n  return (\n    <div className=\"Mypage\">\n      <div className=\"profileContent\">\n        <img className=\"profileImage\" src={`data:image/jpeg;base64,${formMypage.PROFILE_DATA}`} alt=\"프사\" />\n        <div className=\"my-info\" >\n          <span className=\"my-info-text\">이름 {formMypage.USER_NM}</span>\n          <span className=\"my-info-text\">이메일 {formMypage.USER_ID}</span>\n          <span className=\"my-info-text\">전화번호 { }</span>\n          <span className=\"my-info-text\">주소</span>\n        </div>\n      </div>\n      <div className=\"filter-category\">\n        <ul className=\"category\">\n          <li className={`category-each ${category === \"관심 상품\" ? \"active\" : \"\"}`} onClick={onClickCategory}> 관심 상품</li>\n          <li className={`category-each ${category === \"장바구니\" ? \"active\" : \"\"}`} onClick={onClickCategory}>장바구니</li>\n          <li className={`category-each ${category === \"구매 내역\" ? \"active\" : \"\"}`} onClick={onClickCategory}>구매 내역</li>\n        </ul>\n      </div>\n      <div className=\"Mypage_content\">\n        {category === \"관심 상품\" && <Interest />}\n        {category === \"장바구니\" && <Basket />}\n        {category === \"구매 내역\" && <History />}\n      </div>\n    </div>\n  );\n}\n\nexport default MyPage;\n"],"names":["_useState","useState","PRODUCT_FK","IMG_DATA","_useState2","_slicedToArray","products","setProducts","_useState3","_useState4","loading","setLoading","_apiInterest","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","res","wrap","_context","prev","next","fetch","credentials","method","headers","body","JSON","stringify","sent","ok","json","success","data","alert","msg","Error","t0","console","error","stop","apply","arguments","carousel","useRef","useEffect","apiInterest","_jsx","className","children","ref","map","product","index","src","concat","alt","PRODUCT_NM","ORDER_NO","PRICE","ORDER_DT","_apiHistory","apiHistory","action","_jsxs","Date","toLocaleString","QUANTITY","_apiBasket","apiBasket","type","name","length","reduce","acc","value","category","setLightMethod","USER_NM","USER_ID","PROFILE_DATA","formMypage","setFormMypage","onClickCategory","e","pre","target","innerText","_MypageApi","MypageApi","onClick","Interest","Basket","History"],"sourceRoot":""}