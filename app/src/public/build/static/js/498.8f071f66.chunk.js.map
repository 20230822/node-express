{"version":3,"file":"static/js/498.8f071f66.chunk.js","mappings":"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","sources":["components/items.js","routes/Products.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport \"../style/item.css\";\nimport { useEffect, useState } from \"react\";\n\n// 웬만하면 기존 불러온 데이터는 따로 두고 업데이트에 필요한 데이터를 새로 만들어서 사용하기(그래야 오류가 적음..)\nfunction Items( props ) {\n  // 불러온 데이터를 배열형태로 저장할 변수\n  const [light, setLight] = useState([\n    {\n      CARTEGORY_FK: \"\",\n      IMG_DATA: \"\",\n      PRICE: \"\",\n      PRODUCT_PK: \"\",\n    },\n  ]);\n  // 새로 업데이트된 상태 변수\n  const [decodedLight, setDecodedLight] = useState([]);\n  // 현재 조명종류 공백제거하고 주소창에 넣기 위한 변수\n  const lightType = props.path.replace(/\\s/g, \"\");\n\n  // 전달 받은데이터 저장\n  useEffect(() => {\n    setLight(props.data.products);\n  }, [props]);\n\n  //이미지 디코딩 함수\n  useEffect(() => {\n    // async 비동기 함수로 선언하는데 사용 내부에서 await을 사용하여 비동기 작업 수행 (항상 promise를 반환한다.)\n    const decodeImages = async () => {\n      if (light !== undefined) {\n        // await async 함수 안에서만 동작하며, promise가 처리 될때까지 기다린다. \n        // 사용자경험을 향상시키기 위해 사용(응답성 향상, 성능개선)\n        // promise는 비동기 작업을 다룰 때 사용되는 객체로 resolve(성공), reject(거절) 두가지 콜백을 받고 all을 사용하여 여러 배열을 병렬로 처리시 사용\n        const decodedLight = await Promise.all(light.map((lightItem) => {\n          const base64Data = `data:image/jpeg;base64,${lightItem.IMG_DATA}`;\n          lightItem.IMG_DATA = base64Data;\n          return lightItem;\n        }));\n\n        setDecodedLight(decodedLight); // 이런식으로 다른 곳에 저장을 새로 해줘야 무한루프, 비동기 방식에 의한 오류가 생기지 않는다.\n      }\n    };\n      decodeImages();\n  }, [light]);\n\n  return (\n    <div className=\"products-items\">\n      {decodedLight !== undefined &&\n        decodedLight.map((decodedLights, index) => (\n          <Link className=\"item-box\" to={`/Products/${lightType}/상세페이지`} key={index} state={ {id: decodedLights.PRODUCT_PK, img: decodedLights.IMG_DATA}}>\n            <img className=\"item-box-img\" src={decodedLights.IMG_DATA} alt=\"조명사진\" />\n          </Link>\n    ))}\n    </div>\n  );\n}\n\nexport default Items;","import { useLocation } from \"react-router-dom\";\nimport { useEffect, useState, useRef } from \"react\";\nimport Items from \"../components/items\";\nimport \"../style/Products.css\";\n\n// 가져온 주소의 한글아스키값과 일치하는 램프 이름을 선언한 객체\nconst lampAddress = [\n  {\n    address: \"%ED%8E%9C%EB%8D%98%ED%8A%B8\",\n    lamp: \"펜던트\",\n  },\n  {\n    address: \"%ED%94%8C%EB%A1%9C%EC%96%B4%EB%9E%A8%ED%94%84\",\n    lamp: \"플로어 램프\",\n  },\n  {\n    address: \"%ED%85%8C%EC%9D%B4%EB%B8%94%EB%9E%A8%ED%94%84\",\n    lamp: \"테이블 램프\",\n  },\n  {\n    address: \"%EC%9B%94%EB%9E%A8%ED%94%84\",\n    lamp: \"월 램프\",\n  },\n];\n\nfunction Products() {\n  const [lightMethod, setLightMethod] = useState(\"\");\n  const [lampName, setLampName] = useState(\"\");\n  // 현재 주소의 경로이름만 가져오기\n  const location = useLocation().pathname;\n  const product = useRef();\n  // api관련 변수들\n  const [Lamps, setLamps] = useState({\n    category : \"\",\n    pageListSize : \"\",\n    page: \"\",\n  });\n  const [data, setData] = useState(\"\");\n  const [loading, setLoading] = useState(true); // 데이터 로딩 중 여부\n\n  // 주소가 바뀔때마다 실행\n  useEffect(() => {\n    // substr은 삭제된 기능이므로 substring으로 대체 10자리까지 자르고 저장\n    const locationName = location.substring(10);\n    // 주소 이름과 매치되는 램프 이름 설정\n    const matchedLamp = lampAddress.find((lamp) => lamp.address === locationName);\n    \n    if (matchedLamp) {\n      setLampName(matchedLamp.lamp);\n    } else {\n      // 일치하는 주소 이름이 없는 경우 초기화\n      setLampName(\"\");\n    }\n  }, [lampName, location]);\n\n   // 일치하는 카테고리 api전달에 사용하는 함수\n   useEffect(() => {\n    if (lampName === \"펜던트\") {\n      setLamps({\n        category: 10,\n        pageListSize: 20,\n        page: 1,\n      });\n    } else if (lampName === \"플로어 램프\") {\n      setLamps({\n        category: 20,\n        pageListSize: 20,\n        page: 1,\n      });\n    } else if (lampName === \"테이블 램프\") {\n      setLamps({\n        category: 30,\n        pageListSize: 20,\n        page: 1,\n      });\n    } else if (lampName === \"월 램프\") {\n      setLamps({\n        category: 40,\n        pageListSize: 20,\n        page: 1,\n      });\n    }\n  }, [lampName]);\n\n  // 펜던트 이름이 바뀌면 조명방식에 대한 값이 초기화\n  useEffect(() => {\n    setLightMethod(\"\");\n  }, [lampName]);\n\n  // 간접, 반간접, 전반확산, 반직접, 직접에 대한 클릭 기능\n  const onClickLightM = (e) => {\n    const text = e.target.innerText;\n    // 조명 방식 디스플레이(일러스트 보여주는 곳)\n    setLightMethod(text);\n    if (lightMethod === text)\n      setLightMethod(\"\"); \n\n    // api요청 기본값 저장을 위한 조건문\n    let Pendant = \"\";\n    if (lampName === \"펜던트\") {\n      Pendant = 10;\n    } else if (lampName === \"플로어 램프\") {\n      Pendant = 20;\n    } else if (lampName === \"테이블 램프\") {\n      Pendant = 30;\n    } else if (lampName === \"월 램프\") {\n      Pendant = 40;\n    }\n\n    // 조건에 따른 계산 식\n    if (text === \"간접 조명\" && Lamps.category !== Pendant + 1) {\n      Lamps.category = Pendant + 1;\n    } else if (Lamps.category === Pendant + 1) {\n      Lamps.category = Pendant;\n    }\n    if (text === \"반간접 조명\" && Lamps.category !== Pendant + 2) {\n      Lamps.category = Pendant + 2;\n    } else if (Lamps.category === Pendant + 2) {\n      Lamps.category = Pendant;\n    }\n    if (text === \"전반확산 조명\" && Lamps.category !== Pendant + 3) {\n      Lamps.category = Pendant + 3;\n    } else if (Lamps.category === Pendant + 3) {\n      Lamps.category = Pendant;\n    }\n    if (text === \"반직접 조명\" && Lamps.category !== Pendant + 4) {\n      Lamps.category = Pendant + 4;\n    } else if (Lamps.category === Pendant + 4) {\n      Lamps.category = Pendant;\n    }\n    if (text === \"직접 조명\" && Lamps.category !== Pendant + 5) {\n      Lamps.category = Pendant + 5;\n    } else if (Lamps.category === Pendant + 5) {\n      Lamps.category = Pendant;\n    }\n    \n    onClickLamp(); // 비뀐 값으로 다시 요청\n  };\n\n  // light 이미지를 바꾸기 위해 className을 바꿔주는 함수\n  useEffect(() => {\n    product.current.parentElement.firstChild.firstChild.firstChild.className = `light ${lampName}`;\n    product.current.parentElement.firstChild.firstChild.firstChild.firstChild.className = `light ${lightMethod}`;\n  }, [lampName, lightMethod]);\n  \n  // 상품 데이터 요청\n  async function onClickLamp() {\n    try {\n      const response = await fetch('api/product/category', {\n        credentials: 'include',\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(Lamps),// Lamps 값을 JSON 문자열로 변환하여 요청 \n      });\n  \n      // 연결 성공 유무 판단\n      if (response.ok) {\n        const res = await response.json();\n        if (res.success) {\n          setLoading(false) // 로딩이 끝남을 의미\n          setData(res.data); //데이터 저장\n        } else {\n          alert(res.msg);\n        }\n      } else {\n        setLoading(true) // 로딩이 지속됨을 의미\n        throw Error(\"서버 응답 실패\");\n      }\n    } catch (err) {\n      setLoading(true) // 로딩이 지속됨을 의미\n      console.error(Error('불러오는 중 에러 발생'));\n    }\n  };\n\n  useEffect(() => {\n    // 요청 범주가 유효할때만 실행\n    if (Lamps.category >= 10) {\n      onClickLamp();\n    }\n  },[Lamps])\n\n  return (\n    <div className=\"products\" ref={product}>\n      <div className=\"products-filter\">\n        <div className=\"filter-method\">\n          <ul className=\"method\">\n            <li className={`method-each ${lightMethod === \"간접 조명\" ? \"active\" : \"\"}`} onClick={onClickLightM}>간접 조명</li>\n            <li className={`method-each ${lightMethod === \"반간접 조명\" ? \"active\" : \"\"}`} onClick={onClickLightM}>반간접 조명</li>\n            <li className={`method-each ${lightMethod === \"전반확산 조명\" ? \"active\" : \"\"}`} onClick={onClickLightM}>전반확산 조명</li>\n            <li className={`method-each ${lightMethod === \"반직접 조명\" ? \"active\" : \"\"}`} onClick={onClickLightM}>반직접 조명</li>\n            <li className={`method-each ${lightMethod === \"직접 조명\" ? \"active\" : \"\"}`} onClick={onClickLightM}>직접 조명</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"products-root\">\n        <span className=\"root parent\">{lampName}</span>\n        {lightMethod !== \"\" ? <span className=\"root arrow\"></span>: \"\"}\n        {lightMethod !== \"\" ? <span className=\"root\">{lightMethod}</span>: \"\"}\n      </div>\n    \n      {loading === false ? \n        <Items \n          path={lampName}\n          data={data}\n        /> :\n        <div className=\"products-loading\">loading...</div>\n      }\n    </div>\n  );\n}\n\nexport default Products;"],"names":["props","_useState","useState","CARTEGORY_FK","IMG_DATA","PRICE","PRODUCT_PK","_useState2","_slicedToArray","light","setLight","_useState3","_useState4","decodedLight","setDecodedLight","lightType","path","replace","useEffect","data","products","decodeImages","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_decodedLight","wrap","_context","prev","next","undefined","Promise","all","map","lightItem","base64Data","concat","sent","stop","apply","arguments","_jsx","className","children","decodedLights","index","Link","to","state","id","img","src","alt","lampAddress","address","lamp","lightMethod","setLightMethod","lampName","setLampName","location","useLocation","pathname","product","useRef","_useState5","category","pageListSize","page","_useState6","Lamps","setLamps","_useState7","_useState8","setData","_useState9","_useState10","loading","setLoading","locationName","substring","matchedLamp","find","onClickLightM","e","text","target","innerText","Pendant","onClickLamp","_onClickLamp","response","res","fetch","credentials","method","headers","body","JSON","stringify","ok","json","success","alert","msg","Error","t0","console","error","current","parentElement","firstChild","_jsxs","ref","onClick","Items"],"sourceRoot":""}